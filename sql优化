有一次面试被问到了sql优化相关内容，现记录于此。
由于笔者的工作场景对sql的优化使用不是很多且数据量较小，因此这块一直是一个盲区，借此对sql优化做一个梳理。
对于海量数据场景，sql的优化是非常重要的，优质sql和劣质sql在执行速度上可以达到上百倍。多数情况下，Oracle使用索引来快速遍历表，优化器主要根据定义的
索引来提高性能，如果sql语句中的where子句不合理，则可能导致sql放弃索引而进行全表扫描。
优化规则：
一、表连接
   1、表连接越多，性能越差；
   2、外链接效果差，因为必须对左右表进行表扫描，尽量使用inner join查询；
二、如果不可避免，可以考虑使用临时表或变量存放中间结果；
三、减少子查询；
四、视图嵌套不要超过2个为宜；
五、SQL的编写：
    1、NULL列使用索引没有意义，包含NULL值的列都不会被包含在索引中。因此，where语句中的is null 或 is not null的语句优化器是不允许使用索引的；
    2、concat 或 ||（mysql和oracle的字符串连接操作）：如果对列进行该函数操作，也会忽略使用索引；
    3、like,通配符出现在首位，无法使用索引；
    4、order by 表达式，不要使用非索引或嵌套表达式，这样可能会导致性能下降；
    5、Not运算（!=），也会导致无法使用索引；
    6、exists 替代 in，not in 最低效，会导致全表查询，可以考虑外链接或者not exists;
    7、索引，好处是实现折半查找，问题是需要额外的空间，而且每次insert update delete 都会对索引进行更新，增加IO；
    8、union 和 union all，union 有去重功效，增加计算时间，而union all 则不会；
    9、避免select *;
    10、避免在where 子句中对字段进行表达式操作，或是对字段进行函数操作，这样会导致全表扫描；
    11、
    
    
