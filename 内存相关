当java程序从开始到消亡整个生命周期中，所涉及到的内存区域有：
一、运行时数据区域：
  线程私有：
  1、程序计数器
  2、虚拟机栈：java方法执行的内存模型，及栈内存，存储的是虚拟机栈中局部变量表部分，为虚拟机执行 Java 方法 （也就是字节码）服务，可能出现的两种异常为：
  StackOverFlowError\OutOfMemoryError
  3、本地方法栈:本地方法栈则为虚拟机使用到的 Native 方法服务
  线程共享的：
  1、堆：所有线程共享的一块区域，在虚拟机启动时创建，此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例以及数组都在这里分配内存；
  2、方法区：用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码数据，虽然Java规范把方法区描述为堆的一个逻辑部分，但是它却又别名 Non-Heap;
  3、运行时常量池

------------------------------------------------redis---------------------------------------------------------
redis实现的分布式锁
1、互斥访问，只能有一个client拿到锁；
2、避免死锁，最终client都能拿到锁，不会出现死锁的现象，原本锁住资源的client crash了也不会出现网络分区
3、容错性，只要大部分节点存活就可以正常提供服务；
