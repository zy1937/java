一、static 关键字：
1、修饰成员变量和成员方法：此种情形，成员变量和成员方法已不属于这个类的某个对象，而是被所有类对象共享，并通过类名调用；
2、静态代码块：静态代码块定义在类中方法，执行顺序是：静态代码块->非静态代码块->构造方法；静态代码块只执行一次；
3、静态内部类：
4、静态导包：import static 可以导入某个类中指定静态资源，且不需要使用类名调用类中静态成员，可以直接使用类中静态成员变量和成员方法；

二、this 关键字：
访问类的当前实例变量；
调用类的当前实例方法；

三、super 关键字：继承，super调用夫类中的其他构造方法时，调用时要放在构造方法的首行，调用本类中其他构造方法时，也要放在首行；

四、面向对象变成的三大特性：封装、继承、多态；
多态：指程序中定义的引用变量所指的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，
即一个引用变量到底会指向哪个类的实例对象，引用变量发出的方法调用哪个类中实现的方法，必须在程序运行期间才能决定；

五、import java 和 javax 的区别

六、构造方法相关：
1、一个类若没有声明构造方法，也会默认用不带参数的构造方法；
2、调用子类构造方法之前，会先调用父类构造方法；

七、==和equals：
==是判断两个对象的地址是不是相等，即两个对象是不是同一个对象；equals():他的作用也是判断两个对象是否相等；
注意：String 对象中的equals 对象被重写过，其比较的是对象的值；

八、线程相关：
线程的基本状态：新建（new），可运行(runnable)，运行(running)，死亡(dead)

九、关于final 关键字:
1、主要用于：变量、方法、类中；
2、final 变量，其数值一旦在初始化之后就不能修改，如果是引用变量，在初始化之后，不能再让其指向另一个对象；
3、final 修饰类时，表示这个类不能被继承；final类中的所有成员方法都会被隐试指定为final方法；
4、使用final的原因：把方法锁定，以防任何继承类修改它的含义，另一个就是效率原因。


